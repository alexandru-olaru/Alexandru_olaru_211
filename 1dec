#include <iostream>
#include <string.h>

using namespace std;

class Automobil
{
    string marca;
    string model;

public:

    Automobil()
    {
        marca = "unknown";
        model = "unknown";
    }

    Automobil(string marca, string model)
    {
        this -> marca = marca;
        this -> model = model;
    }


    friend ostream &operator<< (ostream &out, const Automobil &a)
    {
        out << "Marca este: " << a.marca << ", iar modelul: " << a.model;

        return out;
    }

};

class MasiniUdercover: public Automobil
{
    const string detalii= "are o viteza mai mare si este prevazuta cu armura";
    int indice;

public:

    MasiniUdercover()
    {
        indice = 0;
    }

    MasiniUdercover(Automobil a, int indice): Automobil(a)
    {
        this -> indice = indice;
    }

    friend ostream &operator<< (ostream &out, const MasiniUdercover &mu)
    {
        out << (Automobil&) mu;
        out << "\nIn plus, masina "<< mu.detalii << ", iar indicele de protectie este: " << mu.indice << "\n";

        return out;
    }

};

class MasiniInterventie: public Automobil
{
    const string detalii= "poate transporta mai multe persoane";
    bool arma;

public:

    MasiniInterventie()
    {
        arma = false;
    }

    MasiniInterventie(Automobil a, bool arma): Automobil(a)
    {
        this -> arma = arma;
    }

    friend ostream &operator<< (ostream &out, const MasiniInterventie &mi)
    {
        out << (Automobil&) mi;
        out << "\nIn plus, masina "<< mi.detalii << " si ";
        if(mi.arma == true) out << "are arma\n";
        else out << "nu are arma\n";

        return out;
    }

};

class MasiniEmisieReceptie: public Automobil
{
    const string detalii= "este folosita pt spionaj";
    int distantaReceptie;

public:

    MasiniEmisieReceptie()
    {
        distantaReceptie = 0;
    }

    MasiniEmisieReceptie(Automobil a, int indice): Automobil(a)
    {
        this -> distantaReceptie = indice;
    }

    friend ostream &operator<< (ostream &out, const MasiniEmisieReceptie &mer)
    {
        out << (Automobil&) mer;
        out << "\nIn plus, masina "<< mer.detalii << ", iar dist de receptie este: " << mer.distantaReceptie << "m\n";

        return out;
    }

};

int main()
{
    Automobil a1("Roman", "DXT"), a2("Skoda", "SDI"), a3("Volkswagen", "Beetle TCR");
    MasiniUdercover m1(a1,3);
    MasiniInterventie m2(a2,true);
    MasiniEmisieReceptie m3(a3, 450);

    cout << m1 << "\n" << m2 << "\n" << m3 << "\n";
}
